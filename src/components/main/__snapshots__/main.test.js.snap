// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main correctly renders after relaunch 1`] = `
Array [
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
    >
      <symbol
        id="icon-arrow-select"
        viewBox="0 0 7 4"
      >
        <path
          clipRule="evenodd"
          d="M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z"
          fillRule="evenodd"
        />
      </symbol>
      <symbol
        id="icon-bookmark"
        viewBox="0 0 17 18"
      >
        <path
          d="M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z"
        />
      </symbol>
      <symbol
        id="icon-star"
        viewBox="0 0 13 12"
      >
        <path
          clipRule="evenodd"
          d="M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z"
          fillRule="evenodd"
        />
      </symbol>
    </svg>
  </div>,
  <div
    className="page page--gray page--main"
  >
    <<div /> />
    <main
      className="page__main page__main--index"
    >
      <h1
        className="visually-hidden"
      >
        Cities
      </h1>
      <<div />
        activeCity={
          Object {
            "location": Object {
              "latitude": 52.370216,
              "longitude": 4.895168,
              "zoom": 10,
            },
            "name": "Amsterdam",
          }
        }
        cities={
          Array [
            Object {
              "location": Object {
                "latitude": 52.370216,
                "longitude": 4.895168,
                "zoom": 10,
              },
              "name": "Amsterdam",
            },
          ]
        }
        onChangeCity={[MockFunction]}
      />
      <div
        className="cities"
      >
        <<div />
          activeCity={
            Object {
              "location": Object {
                "latitude": 52.370216,
                "longitude": 4.895168,
                "zoom": 10,
              },
              "name": "Amsterdam",
            }
          }
          className="cities__places-list places__list tabs__content"
          handleClickCardHeader={[Function]}
          places={
            Array [
              Object {
                "city": Object {
                  "location": Object {
                    "latitude": 52.370216,
                    "longitude": 4.895168,
                    "zoom": 10,
                  },
                  "name": "Amsterdam",
                },
                "id": 1,
                "isFavorite": false,
                "isPremium": false,
                "location": Object {
                  "latitude": 52.370216,
                  "longitude": 4.895168,
                },
                "previewImage": "img/apartment-01.jpg",
                "price": 120,
                "rating": 93,
                "title": "Beautiful &amp; luxurious apartment at great location",
                "type": "apartment",
              },
            ]
          }
        />
      </div>
    </main>
  </div>,
]
`;

exports[`Main correctly renders empty places after relaunch 1`] = `
Array [
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
    >
      <symbol
        id="icon-arrow-select"
        viewBox="0 0 7 4"
      >
        <path
          clipRule="evenodd"
          d="M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z"
          fillRule="evenodd"
        />
      </symbol>
      <symbol
        id="icon-bookmark"
        viewBox="0 0 17 18"
      >
        <path
          d="M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z"
        />
      </symbol>
      <symbol
        id="icon-star"
        viewBox="0 0 13 12"
      >
        <path
          clipRule="evenodd"
          d="M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z"
          fillRule="evenodd"
        />
      </symbol>
    </svg>
  </div>,
  <div
    className="page page--gray page--main"
  >
    <<div /> />
    <main
      className="page__main page__main--index"
    >
      <h1
        className="visually-hidden"
      >
        Cities
      </h1>
      <<div />
        activeCity={
          Object {
            "location": Object {
              "latitude": 52.370216,
              "longitude": 4.895168,
              "zoom": 10,
            },
            "name": "Amsterdam",
          }
        }
        cities={
          Array [
            Object {
              "location": Object {
                "latitude": 52.370216,
                "longitude": 4.895168,
                "zoom": 10,
              },
              "name": "Amsterdam",
            },
          ]
        }
        onChangeCity={[MockFunction]}
      />
      <div
        className="cities"
      >
        <div
          className="cities__places-container cities__places-container--empty container"
        >
          <section
            className="cities__no-places"
          >
            <div
              className="cities__status-wrapper tabs__content"
            >
              <b
                className="cities__status"
              >
                No places to stay available
              </b>
              <p
                className="cities__status-description"
              >
                We could not find any property availbale at the moment in 
                Amsterdam
              </p>
            </div>
          </section>
          <div
            className="cities__right-section"
          />
        </div>
      </div>
    </main>
  </div>,
]
`;
